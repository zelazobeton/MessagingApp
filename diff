diff --git a/Client/.idea/workspace.xml b/Client/.idea/workspace.xml
index 7e281e0..0ad8b59 100644
--- a/Client/.idea/workspace.xml
+++ b/Client/.idea/workspace.xml
@@ -3,16 +3,11 @@
   <component name="ChangeListManager">
     <list default="true" id="46c09216-0889-4e43-9eea-67987c15b073" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Client/com/example/Client/Client.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Client/com/example/Client/Main.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Client/com/Client/src/Client.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Client/com/Client/src/Client.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/com/Client/src/Client.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/Client/src/Client.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/Client/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/Client/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../Server/Server.iml" beforeDir="false" afterPath="$PROJECT_DIR$/../Server/Server.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../Server/out/production/Server/com/example/Server/ConnectionPortHandler.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../Server/out/production/Server/com/example/Server/Echoer.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/../Server/out/production/Server/com/example/Server/Main.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../Server/out/production/Server/com/Server/src/ConnectionPortHandler.class" beforeDir="false" afterPath="$PROJECT_DIR$/../Server/out/production/Server/com/Server/src/ConnectionPortHandler.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../Server/out/production/Server/com/Server/src/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/../Server/out/production/Server/com/Server/src/Main.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../Server/src/com/Server/src/ConnectionPortHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/../Server/src/com/Server/src/ConnectionPortHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../Server/src/com/Server/src/Echoer.java" beforeDir="false" afterPath="$PROJECT_DIR$/../Server/src/com/Server/src/Echoer.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../Server/src/com/Server/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/../Server/src/com/Server/src/Main.java" afterDir="false" />
     </list>
     <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
@@ -53,10 +48,9 @@
     </option>
   </component>
   <component name="RunManager">
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true">
+    <configuration name="Main" type="Application" factoryName="Application" singleton="false" temporary="true">
       <option name="MAIN_CLASS_NAME" value="com.Client.src.Main" />
       <module name="Client" />
-      <option name="WORKING_DIRECTORY" value="file://$PROJECT_DIR$" />
       <RunnerSettings RunnerId="Run" />
       <ConfigurationWrapper RunnerId="Run" />
       <method v="2">
diff --git a/Client/out/production/Client/com/Client/src/Client.class b/Client/out/production/Client/com/Client/src/Client.class
index 6f30650..bb547f1 100644
Binary files a/Client/out/production/Client/com/Client/src/Client.class and b/Client/out/production/Client/com/Client/src/Client.class differ
diff --git a/Client/src/com/Client/src/Client.java b/Client/src/com/Client/src/Client.java
index e45ab6a..354b7e2 100644
--- a/Client/src/com/Client/src/Client.java
+++ b/Client/src/com/Client/src/Client.java
@@ -6,6 +6,7 @@ import java.io.PrintWriter;
 import java.util.Random;
 import java.util.Scanner;
 import java.util.concurrent.ThreadLocalRandom;
+import java.util.regex.Pattern;
 
 public class Client {
     private BufferedReader serverReader;
@@ -38,17 +39,20 @@ public class Client {
 
     public boolean connect(){
         Integer connectionId;
-//        connectionId = ThreadLocalRandom.current().nextInt(0, 1000);
-        connectionId = 1;
+        connectionId = ThreadLocalRandom.current().nextInt(1, 10);
+//        connectionId = 1;
         while(true){
             try{
                 clientWriter.println("connect_" + connectionId);
-                String response = serverReader.readLine();
-                LOG.DEBUG("Received connection response: " + response);
 
-                if(response.equals("OK_" + connectionId)){
-//                    LOG.DEBUG("");
-                    return true;
+                for(int idx = 0; idx < 10; idx++){
+                    String response = serverReader.readLine();
+                    LOG.DEBUG("Received connection response: " + response);
+                    if(isResponseToConnectionReq(response)){
+                        LOG.DEBUG("Received resp with verificationInt");
+                        return true;
+                    }
+                    sleepWithExceptionHandle(100);
                 }
                 sleepWithExceptionHandle(200);
             }
@@ -65,4 +69,8 @@ public class Client {
             LOG.WRN("Thread interrupted");
         }
     }
+
+    private boolean isResponseToConnectionReq(String response){
+        return (response != null && Pattern.matches("OK_[0-9]_[0-9]", response));
+    }
 }
diff --git a/Server/out/production/Server/com/Server/src/ConnectionPortHandler.class b/Server/out/production/Server/com/Server/src/ConnectionPortHandler.class
index 7e36fd5..6049208 100644
Binary files a/Server/out/production/Server/com/Server/src/ConnectionPortHandler.class and b/Server/out/production/Server/com/Server/src/ConnectionPortHandler.class differ
diff --git a/Server/out/production/Server/com/Server/src/Main.class b/Server/out/production/Server/com/Server/src/Main.class
index 6252ba3..898d26f 100644
Binary files a/Server/out/production/Server/com/Server/src/Main.class and b/Server/out/production/Server/com/Server/src/Main.class differ
diff --git a/Server/src/com/Server/src/ConnectionPortHandler.java b/Server/src/com/Server/src/ConnectionPortHandler.java
index 7610510..9a8f9b6 100644
--- a/Server/src/com/Server/src/ConnectionPortHandler.java
+++ b/Server/src/com/Server/src/ConnectionPortHandler.java
@@ -3,6 +3,8 @@ package com.Server.src;
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.PrintWriter;
+import java.util.concurrent.ThreadLocalRandom;
+import java.util.regex.Pattern;
 
 public class ConnectionPortHandler {
     private BufferedReader input;
@@ -17,12 +19,10 @@ public class ConnectionPortHandler {
         try{
             while(true) {
                 String connectString = input.readLine();
-                sleepWithExceptionHandle();
+                sleepWithExceptionHandle(1000);
 
-                if (connectString != null && connectString.equals("connect_1")) {
-                    output.println("OK_1");
-                    LOG.DEBUG(connectString);
-                    break;
+                if (isConnectionReq(connectString)){
+                    handleConnectionReq(connectString);
                 }
                 else {
                     LOG.WRN("Received wrong connect msg");
@@ -34,11 +34,23 @@ public class ConnectionPortHandler {
         }
     }
 
-    private void sleepWithExceptionHandle(){
+    private void sleepWithExceptionHandle(Integer millisecondsToSleep){
         try {
-            Thread.sleep(200);
+            Thread.sleep(millisecondsToSleep);
         } catch (InterruptedException ex) {
             LOG.WRN("Thread interrupted: " + ex.getMessage());
         }
     }
+
+    private boolean isConnectionReq(String msgString){
+//        return (msgString != null && msgString.equals("connect_1"));
+        return (msgString != null && Pattern.matches("connect_[0-9]", msgString));
+    }
+
+    private void handleConnectionReq(String msgString){
+        Character randomAccessChar = msgString.charAt(8);
+        Integer verificationInt = ThreadLocalRandom.current().nextInt(1, 10);
+        output.println("OK_" + randomAccessChar + "_" + verificationInt);
+        LOG.DEBUG(msgString);
+    }
 }
diff --git a/Server/src/com/Server/src/Main.java b/Server/src/com/Server/src/Main.java
index 6d3664a..4e63293 100644
--- a/Server/src/com/Server/src/Main.java
+++ b/Server/src/com/Server/src/Main.java
@@ -11,6 +11,7 @@ public class Main {
     private static final Integer CONNECTION_PORT = 5000;
 
     public static void main(String[] args) {
+
         Socket socket;
         try(ServerSocket serverSocket = new ServerSocket(CONNECTION_PORT)){
             socket = serverSocket.accept();
